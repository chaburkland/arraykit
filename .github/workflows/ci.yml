name: CI
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
  release:
    types: [published]
jobs:
  tar_gz:
    name: Package
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@master
        with:
          python-version: 3.11
      - run: pip install -r requirements-build.txt
      - run: python setup.py sdist
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist

  whl_lt_3_9:
    name: Build / ${{ matrix.os }} / Python ${{ matrix.major }}.${{ matrix.minor }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-12, ubuntu-22.04, windows-2022]
        major: [3]
        minor: [8]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@master
      - run: echo '::add-matcher::.github/problem-matchers/gcc.json'
        if: matrix.os == 'macos-12' || matrix.os == 'ubuntu-22.04'
      - run: echo '::add-matcher::.github/problem-matchers/msvc.json'
        if: matrix.os == 'windows-2022'

      - uses: pypa/cibuildwheel@v2.16.2
        with:
          output-dir: dist
        env:
          CIBW_ARCHS_MACOS: x86_64 universal2 arm64
          CIBW_BEFORE_BUILD: pip install -r {project}/requirements-build-backward.txt
          CIBW_BUILD: cp${{ matrix.major }}${{ matrix.minor }}-*
          CIBW_BUILD_VERBOSITY: 1
          CIBW_BEFORE_TEST: pip install -r {project}/requirements-test-backward.txt
          CIBW_TEST_COMMAND: pytest {project}/test
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist

  whl_3_9_to_3_11:
    name: Build / ${{ matrix.os }} / Python ${{ matrix.major }}.${{ matrix.minor }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-12, ubuntu-22.04, windows-2022]
        major: [3]
        minor: [9, 10, 11]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@master
      - run: echo '::add-matcher::.github/problem-matchers/gcc.json'
        if: matrix.os == 'macos-12' || matrix.os == 'ubuntu-22.04'
      - run: echo '::add-matcher::.github/problem-matchers/msvc.json'
        if: matrix.os == 'windows-2022'

      - uses: pypa/cibuildwheel@v2.16.2
        with:
          output-dir: dist
        env:
          CIBW_ARCHS_MACOS: x86_64 universal2 arm64
          CIBW_BEFORE_BUILD: pip install -r {project}/requirements-build.txt
          CIBW_BUILD: cp${{ matrix.major }}${{ matrix.minor }}-*
          CIBW_BUILD_VERBOSITY: 1
          CIBW_BEFORE_TEST: pip install -r {project}/requirements-test.txt
          CIBW_TEST_COMMAND: pytest {project}/test
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist

  whl_3_12:
    name: Forward / ${{ matrix.os }} / Python ${{ matrix.major }}.${{ matrix.minor }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]
        major: [3]
        minor: [12]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@master
      - run: echo '::add-matcher::.github/problem-matchers/gcc.json'
        if: matrix.os == 'macos-12' || matrix.os == 'ubuntu-22.04'
      - run: echo '::add-matcher::.github/problem-matchers/msvc.json'
        if: matrix.os == 'windows-2022'

      - uses: pypa/cibuildwheel@v2.16.2
        with:
          output-dir: dist
        env:
          CIBW_ARCHS_MACOS: x86_64 universal2 arm64
          CIBW_BEFORE_BUILD: pip install -r {project}/requirements-build.txt
          CIBW_BUILD: cp${{ matrix.major }}${{ matrix.minor }}-*
          CIBW_BUILD_VERBOSITY: 1
          CIBW_BEFORE_TEST: pip install -r {project}/requirements-test-forward.txt
          CIBW_TEST_COMMAND: pytest {project}/test

  upload:
    name: Publish
    if: github.event_name == 'release'
    needs: [tar_gz, whl_lt_3_9, whl_3_9_to_3_11, whl_3_12]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist
      - uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_TOKEN }}
          skip_existing: true
